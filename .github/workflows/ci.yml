name: Gitleaks and SonarQube CI

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  gitleaks:
    name: Gitleaks Secret Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Run Gitleaks
        uses: gitleaks/gitleaks-action@v2
        with:
          scan-dir: .
          scan-type: repo
          report-format: sarif
          report-path: gitleaks-report.sarif

      - name: Show Report
        run: cat gitleaks-report.sarif || echo "No report"

      - name: Fail if Secrets Found
        run: |
          if grep -q '"ruleId"' gitleaks-report.sarif; then
            echo "Secret leaks found!"
            exit 1
          fi

  sonarqube:
    name: SonarQube Scan
    runs-on: ubuntu-latest
    needs: gitleaks
    steps:
      - uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm install

      - name: Run SonarQube Scanner
        run: |
          npm install -g sonarqube-scanner
          sonar-scanner             -Dsonar.projectKey=bad-node-app             -Dsonar.sources=src             -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }}             -Dsonar.login=${{ secrets.SONAR_TOKEN }}

      - name: Wait for SonarQube Quality Gate
        id: quality-gate
        uses: sonarsource/sonarqube-quality-gate-action@v1.1.0
        with:
          sonar-token: ${{ secrets.SONAR_TOKEN }}
          server-url: ${{ secrets.SONAR_HOST_URL }}
          project-key: bad-node-app

      - name: Fail if Quality Gate failed
        run: |
          if [ "${{ steps.quality-gate.outputs.quality-gate-status }}" != "PASSED" ]; then
            echo "‚ùå Quality Gate failed"
            exit 1
          fi

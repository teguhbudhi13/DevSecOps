name: Gitleaks and SonarQube CI

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  gitleaks:
    name: Gitleaks Secret Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Download Gitleaks CLI
        run: |
          curl -sSL https://github.com/gitleaks/gitleaks/releases/download/v8.24.3/gitleaks_8.24.3_linux_x64.tar.gz | tar -xz
          sudo mv gitleaks /usr/local/bin/

      - name: Run Gitleaks (full directory scan, no Git)
        run: |
          gitleaks detect \
            --no-git \
            --source . \
            --report-format sarif \
            --report-path gitleaks-report.sarif \
            --exit-code 1

      - name: Show Report
        run: cat gitleaks-report.sarif || echo "No report"

      - name: Fail if Secrets Found
        run: |
          if grep -q '"ruleId"' gitleaks-report.sarif; then
            echo "❌ Gitleaks found hardcoded secrets"
            exit 1
          else
            echo "✅ No secrets detected by Gitleaks"
          fi

  sonarqube:
    name: SonarQube Scan
    runs-on: ubuntu-latest
    needs: gitleaks
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Run SonarQube Scanner
        run: |
          npm install -g sonarqube-scanner
          sonar-scanner \
            -Dsonar.projectKey=bad-node-app \
            -Dsonar.sources=src \
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}

      - name: Wait for SonarQube Quality Gate
        id: quality-gate
        uses: sonarsource/sonarqube-quality-gate-action@master
        with:
          scanMetadataReportFile: .scannerwork/report-task.txt
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Fail if Quality Gate failed
        run: |
          if [ "${{ steps.quality-gate.outputs.quality-gate-status }}" != "PASSED" ]; then
            echo "❌ SonarQube Quality Gate failed"
            exit 1
          else
            echo "✅ SonarQube Quality Gate passed"
          fi
